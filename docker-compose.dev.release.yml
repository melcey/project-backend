# Docker Compose file for Dev deployment of the backend in Release configuration

services:
  # The container for the monolithic backend
  backend:
    build:
      context: ./backend
      dockerfile: release.Dockerfile
    # Name of the container
    container_name: backend-dev
    # The container will always be restarted
    restart: always
    ports:
      # The port 8080 of the machine is mapped into the port 8080 of the container
      - "8080:8080"
    depends_on:
      # Depends on the PostgreSQL container working healthily
      postgres-dev:
        condition: service_healthy
    # The container uses the network "shared-net-dev"
    networks:
      - shared-net-dev
    environment:
      # The container will be run in the dev environment
      - SPRING_PROFILES_ACTIVE=dev

  # The container for the dev database
  postgres-dev:
    # Name of the container
    container_name: postgres-dev
    image: postgres:17.4
    # The container will always be restarted
    restart: always
    # Volumes to be used by the container
    volumes:
      # The volume for the database
      - postgres-dev_data:/var/lib/postgresql/data
    # The container uses the network "shared-net-dev"
    networks:
      - shared-net-dev
    ports:
      # The port 5433 of the machine is mapped into the port 5432 of the container
      # In order to distinguish from the connections for the production database
      - "5433:5432"
    # Environment variables for the connection
    environment:
      - POSTGRES_USER:postgres
      - POSTGRES_PASSWORD:pg_admin_pwd
      - POSTGRES_DB:project_db
    # The health check performed for the container
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      # The health check will be performed every 5 seconds
      interval: 5s
      # The command must be completed in 5 seconds
      timeout: 5s
      # After 5 retries, the container will be marked as unhealthy
      retries: 10

  # Flyway container for running migrations
  #flyway:
    # Name of the container
  #  container_name: flyway-dev
  #  image: flyway/flyway:latest
    # Retrieves the username and password data for admin from the .env file
  #  env_file:
  #    - .env
  #  command: -url=jdbc:postgresql://postgres-dev:5432/${POSTGRES_DB} -user=${POSTGRES_USER} -password=${POSTGRES_PASSWORD} migrate
    # Does not restart when it is run once
  #  restart: "no"
  #  depends_on:
      # Depends on the PostgreSQL microservice working healthily
  #    postgres-dev:
  #      condition: service_healthy
    # Copies the migrations to the appropriate directory on the container
  #  volumes:
  #    - ./db/migration:/flyway/sql
     # The container uses the network "shared-net-dev"
  #  networks:
  #    - shared-net-dev

# Declaration of the volume for the database
volumes:
  postgres-dev_data:

# The common network for the containers
networks:
  shared-net-dev:
    driver: bridge